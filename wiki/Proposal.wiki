 * [Proposal#Project_Description Project Description]
 * [Proposal#Motivation Motivation]
 * [Proposal#Group_Members_&_Roles Group Members & Roles]
 * [Proposal#Development_Tools Development Tools]
 * [Proposal#Development_Schedule Development Schedule]

----
= Project Description =

==Google Map Search==
As a location-based TODO kind application which is based on Google Map, searching places should be available, this allows user to input a place to the search bar and get the result displayed on the google map.

==Adding Event==
To create an event, the user are promoted to input several basic informations related to his event going to be scheduled:
===Name=== 
Input the title(name) of the event;
===Time===
The Start time, Duration of the event;
===Location===
The location of the event;
===Description===
The description of the event (optional for the user);
===Event type===
 * Compulsory: If an event is set as compulsory, the userâ€™s location will be checked at the start time of the event;
 * Optional
===Transportation type (Optional)===
Drive, Public transportation, walking would be provided as 3 options to the user and the user are promoted to select one of them as the transportation method, then the estimated time needed will be provided.

==Editing or Deleting Event==
For the user to edit the basic information of an event or to delete an event.

==Reminder==
there are 2 way to remind a user:
===Timed Reminder===
A specified time is set during adding an event procedure and the app will remind the user at that specified time.
===Remind me based on my current location===
The system will check the remaining time for the next event, calculate the time needed based on my current location and remind me if the remaining time is shorter than the time needed.

==Check location using GPS==
When the start time reached, the application will check the location of the user using GPS and to report to the user about whether he reached the place on time.

==Check location using Wifi (optional)==
When the start time reached, the application will check the indoor location of the user using Wifi and to report to the user about whether he reached the place on time.

==Login (optional)==
This application allows user to login with his google account and moreover, to sync his schedule from a location-based list to Google Calender.
----
=Motivation=

Nowadays, calendar we use is basically time-based schedule. From them, we can clearly know the time and order of events. However, for location information of those events, we have to open Google map application to get details. 

This location-based apps we designed is based on Google map. By checking location on maps, users can know the time and other important information about those events. Other fantastic features of classical calendar like reminder, can be also implemented in this location-based schedule.

Since location is main feature of event, more functions about path or estimated arrival time can be added to this application. 
----
= Group Members & Roles =

|| *Name* || *ITSC* || *Year* || *Role*||
|| TAM, Shih Lung  || sltamab || 2 || ||
|| WANG, Ding || dwangac || 2|| ||
|| YANG, Ji || jyangaa || 3 || ||
|| ZENG, Xiong || xzengac || 2 || ||
|| ZHANG, Tian || tzhangaa || 2 ||  ||

----
= Development Tools =

The app will be designed and made by using the following tools:

 * Eclipse , Android Developer Tools   Build: v22.3.0-887826

 * Android SDK 

 * Google API

 * Subversion
----
= Development Schedule =

|| *Week* || *Finishing Date* || *Task* ||
|| 2 || Feb. 14 || Submission of initial proposal ||	
|| 3 || Feb. 20 || Proposal presentation ||	
|| 4 || Mar. 1 || System requirement and functional specification ||
|| 5 || Mar. 7 || Finish homepage UI design ||
|| 6 || Mar. 15 || Realize localization and schedule function ||
|| 7 || Mar. 21 || Complete pre-prototype ||
|| 8 || Mar. 25 || 1st inner testing on functionality ||
|| 8 || Mar. 29 || Release Beta version (1.0b1)|| 
|| 9 || Apr. 1 || Prototype presentation ||
|| 10 || Apr. 7 || Complete optional task 1, update version to 1.0b2 ||
|| 11 || Apr. 15 || 2nd inner testing for 1.0b2 ||
|| 13 || May 8 || Final presentation ||		
		
		
		
		
		